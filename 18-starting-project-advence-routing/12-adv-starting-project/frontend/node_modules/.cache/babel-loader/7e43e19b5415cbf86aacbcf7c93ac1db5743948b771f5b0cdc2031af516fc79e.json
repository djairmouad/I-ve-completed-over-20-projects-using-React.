{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Desktop\\\\learning React js\\\\18-starting-project-advence-routing\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EditDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport RootLayout from './pages/root/RootLayout';\nimport EventsNavigation from './components/EventsNavigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }, this)\n    }, {\n      path: \"/events\",\n      element: /*#__PURE__*/_jsxDEV(EventsNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }, this),\n      children: [{\n        path: \"/events\",\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this),\n        loader: async () => {\n          const response = await fetch('http://localhost:8080/events');\n          if (!response.ok) {} else {\n            const resData = await response.json();\n            return resData.events;\n          }\n        }\n      }, {\n        path: \"/events/:id\",\n        element: /*#__PURE__*/_jsxDEV(EditDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \"/events/new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \"/events/:id/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","EditDetailPage","NewEventPage","EditEventPage","RootLayout","EventsNavigation","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","response","fetch","ok","resData","json","events","_c","$RefreshReg$"],"sources":["C:/Users/laptop/Desktop/learning React js/18-starting-project-advence-routing/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter} from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EditDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport RootLayout from './pages/root/RootLayout';\nimport EventsNavigation from './components/EventsNavigation';\nfunction App() {\n  const router=createBrowserRouter([\n    {path:\"/\",element:<RootLayout/>, children:[\n      {index:true,element:<HomePage/>},\n      {path:\"/events\",element:<EventsNavigation/>,children:[\n        {path:\"/events\",element:<EventsPage/>, loader:async()=>{\n          const response = await fetch('http://localhost:8080/events');\n\n      if (!response.ok) {\n        \n      } else {\n        const resData = await response.json();\n        return resData.events\n      }\n      \n        }},\n        {path:\"/events/:id\",element:<EditDetailPage/>},\n        {path:\"/events/new\",element:<NewEventPage/>},\n        {path:\"/events/:id/edit\",element:<EditEventPage/>}\n      ]}\n    ]}\n  ])\n \n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACrE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7D,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAACX,mBAAmB,CAAC,CAC/B;IAACY,IAAI,EAAC,GAAG;IAACC,OAAO,eAACJ,OAAA,CAACH,UAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAAEC,QAAQ,EAAC,CACxC;MAACC,KAAK,EAAC,IAAI;MAACN,OAAO,eAACJ,OAAA,CAACR,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,CAAC,EAChC;MAACL,IAAI,EAAC,SAAS;MAACC,OAAO,eAACJ,OAAA,CAACF,gBAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAACC,QAAQ,EAAC,CACnD;QAACN,IAAI,EAAC,SAAS;QAACC,OAAO,eAACJ,OAAA,CAACP,UAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;QAAEG,MAAM,EAAC,MAAAA,CAAA,KAAS;UACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;UAEhE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,CAElB,CAAC,MAAM;YACL,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YACrC,OAAOD,OAAO,CAACE,MAAM;UACvB;QAEE;MAAC,CAAC,EACF;QAACd,IAAI,EAAC,aAAa;QAACC,OAAO,eAACJ,OAAA,CAACN,cAAc;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC,EAC9C;QAACL,IAAI,EAAC,aAAa;QAACC,OAAO,eAACJ,OAAA,CAACL,YAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC,EAC5C;QAACL,IAAI,EAAC,kBAAkB;QAACC,OAAO,eAACJ,OAAA,CAACJ,aAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC,CAAC;IACnD,CAAC;EACH,CAAC,CACH,CAAC;EAEF,oBAAOR,OAAA,CAACV,cAAc;IAACY,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACU,EAAA,GAxBQjB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}