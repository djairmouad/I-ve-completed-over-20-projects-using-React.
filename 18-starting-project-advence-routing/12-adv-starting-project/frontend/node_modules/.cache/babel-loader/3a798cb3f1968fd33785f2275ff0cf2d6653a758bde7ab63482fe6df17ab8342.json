{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop\\\\Desktop\\\\learning React js\\\\18-starting-project-advence-routing\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: resolvedEvents => {\n        return /*#__PURE__*/_jsxDEV(EventsList, {\n          events: resolvedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 34\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function fetchEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"could not fetch events\"\n    }), {\n      status: 404,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: fetchEvents()\n  });\n}\n\n// import { Await, defer, useLoaderData } from 'react-router-dom';\n// import EventsList from '../components/EventsList';\n// import { Suspense } from 'react';\n\n// function EventsPage() {\n//     const { events } = useLoaderData(); // Destructure to get events\n\n//     return (\n//         <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading....</p>}>\n//             <Await resolve={events}>\n//                 {(resolvedEvents) => <EventsList events={resolvedEvents} />}\n//             </Await>\n//         </Suspense>\n//     );\n// }\n\n// export default EventsPage;\n// async function fetchEvents() {\n//   const response = await fetch('http://localhost:8080/events');\n\n//   if (!response.ok) {\n//       throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n//           status: 404,\n//           headers: {\n//               'Content-Type': 'application/json'\n//           }\n//       });\n//   } else {\n//       const resData = await response.json();\n//       return resData.events;\n//   }\n// }\n\n// export { fetchEvents };\n// export function loader() {\n//   return defer({\n//       events: fetchEvents()\n//   });\n// }\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","defer","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","resolvedEvents","_c","fetchEvents","response","fetch","ok","Response","JSON","stringify","message","status","headers","resData","json","loader","$RefreshReg$"],"sources":["C:/Users/laptop/Desktop/learning React js/18-starting-project-advence-routing/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["\r\nimport { Await, defer, useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventsPage() {\r\n    const {events}=useLoaderData();\r\n\r\n  return (\r\n    \r\n    <Suspense fallback={<p style={{textAlign:\"center\"}}>Loading....</p>}>\r\n    <Await resolve={events}>\r\n      {(resolvedEvents)=>{return <EventsList events={resolvedEvents} />}}\r\n    </Await>\r\n      \r\n      </Suspense>\r\n    \r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\n async function fetchEvents(){\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n      throw new Response(JSON.stringify({message: \"could not fetch events\"}), {\r\n        status: 404,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n    } else {\r\n      const resData = await response.json();\r\n      return resData.events;\r\n    }\r\n    \r\n}\r\n\r\nexport function loader(){\r\n  return defer({\r\n    events:fetchEvents()\r\n  })\r\n}\r\n\r\n// import { Await, defer, useLoaderData } from 'react-router-dom';\r\n// import EventsList from '../components/EventsList';\r\n// import { Suspense } from 'react';\r\n\r\n// function EventsPage() {\r\n//     const { events } = useLoaderData(); // Destructure to get events\r\n\r\n//     return (\r\n//         <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading....</p>}>\r\n//             <Await resolve={events}>\r\n//                 {(resolvedEvents) => <EventsList events={resolvedEvents} />}\r\n//             </Await>\r\n//         </Suspense>\r\n//     );\r\n// }\r\n\r\n// export default EventsPage;\r\n// async function fetchEvents() {\r\n//   const response = await fetch('http://localhost:8080/events');\r\n\r\n//   if (!response.ok) {\r\n//       throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n//           status: 404,\r\n//           headers: {\r\n//               'Content-Type': 'application/json'\r\n//           }\r\n//       });\r\n//   } else {\r\n//       const resData = await response.json();\r\n//       return resData.events;\r\n//   }\r\n// }\r\n\r\n// export { fetchEvents };\r\n// export function loader() {\r\n//   return defer({\r\n//       events: fetchEvents()\r\n//   });\r\n// }\r\n"],"mappings":";;AACA,SAASA,KAAK,EAAEC,KAAK,EAAEC,aAAa,QAAQ,kBAAkB;AAC9D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAACC;EAAM,CAAC,GAACP,aAAa,CAAC,CAAC;EAEhC,oBAEEI,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACpEP,OAAA,CAACN,KAAK;MAACkB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,cAAc,IAAG;QAAC,oBAAOb,OAAA,CAACH,UAAU;UAACM,MAAM,EAAEU;QAAe;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEI,CAAC;AAGjB;AAACT,EAAA,CAbQD,UAAU;EAAA,QACAL,aAAa;AAAA;AAAAkB,EAAA,GADvBb,UAAU;AAenB,eAAeA,UAAU;AAExB,eAAec,WAAWA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAE;IAAwB,CAAC,CAAC,EAAE;MACtEC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EAEJ,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACtB,MAAM;EACvB;AAEJ;AAEA,OAAO,SAASwB,MAAMA,CAAA,EAAE;EACtB,OAAOhC,KAAK,CAAC;IACXQ,MAAM,EAACY,WAAW,CAAC;EACrB,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}